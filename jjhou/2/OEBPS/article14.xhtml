<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>http://www.grabmybooks.com</title>
    <meta content="http://www.w3.org/1999/xhtml; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../stylesheet.css" type="text/css" rel="stylesheet"/><style type="text/css">
@page {
    margin-bottom: 5pt;
    margin-top: 5pt
    }
@font-face {
    font-family: "DroidSans", serif, sans-serif;
    src: url(res:///ebook/fonts/DroidSansFallback.ttf)
    }
</style></head>
  <body class="calibre">
<h2 class="calibre1">噢 1995</h2>
<p class="calibre2">翻開歷史, <br class="calibre5"/>產品好但是敗走市場的例子履見不鮮, <br class="calibre5"/>產品不是最好但是銷售非常成功的例子也履見不鮮。</p>

<p class="calibre2">至於產品不好, <br class="calibre5"/>噢, 那當然就絕沒有機會了 </p>

<p class="calibre2">嗨, RunPC 的朋友們, 自從我代替我那忙得沒有時間寫「信」給我的朋友曾銘源先生 (美東隨筆作者), 寫了一篇「你正站在十字路口」揮別 1994 之後, 一隔經年, 竟然又到了 1995 的最後一個月。這一年你跨越十字路口了嗎 ? 你選擇理想的道路了嗎 ? 十二個月過得踏實嗎 ? 對得起自己嗎 ? 我的朋友常常笑我一頭栽進這個快速變遷的領域, 頭髮日漸稀少, 身形永遠削瘦。但因為變遷快速, 使我常常需要思考, 因而有機會多看多聽多反省。沒有什麼比多動腦並且跟著時代脈動前進更美好的事。</p>

<p class="calibre2">■ 鋁門窗與鐵捲門之 1995</p>

<p class="calibre2">資訊界 1995 年的頭號消息當然是 Windows 95 所造成的話題與風潮。基本上對於這種模仿汽車業的命名方式我有點不適應。如果你在 96 年或 97 年還談到看到 Windows 95, 會不會立刻浮現「一層灰」的感覺 ? 如果是 Windows 4.0 就不會；而如果微軟每年出一個改版, 我們卻又消受不起。<br class="calibre5"/>32 位元作業系統早就有了, IBM 的 OS/2 Warp 3.0 去年年底就已推出, 更別提其前身 -- 也是 32 位元作業系統的 OS/2 2.0 -- 有多早。我聽說微軟花了數億大洋的富蘭克林在廣告與行銷上面 (編按：美百元大鈔上是富蘭克林肖像)。數億 ? 我有沒有記錯 ? 還是當初我根本就聽錯了 ?</p>

<p class="calibre2">這年頭形勢比人強。Windows 95 的消息, 微軟只要稍微露點口風, 媒體記者就蜂擁而來, 爭相報導；IBM 推 OS/2 卻得辛苦一些。Windows 95 的書一拖拉庫一拖拉庫地出, OS/2 的書難見蹤影。站在有競爭才有進步的角度來看, 我真希望兩強的市場距離縮短一些。OS/2 真材實料, 又不是阿斗, 是應該可以有作為的。就在剛剛, 我看到了 IBM 名為「世界一家」的電視廣告, 無遠弗屆, 令人怦然心動。(平常看到新聞尾巴, 我就躦進研究室繼續「辦公」去了, 今天也真巧)。不過, 他們先得把安裝的困難度降低一點。有一位網友在安裝了 20 次之後, 發了一封信, 標題是：「我受不了啦」。當然也有安裝很順利的例子, 但 IBM 必須正視不該出現卻常常出現的抱怨, OS/2 才有前途。</p>

<p class="calibre2">鋁門窗與鐵捲門的世紀戰爭, 是咱們資訊人最感興趣的話題, 我常常在網路論壇上看到兩派人馬筆戰, 殺氣騰騰, 耳邊彷彿「漁陽鼙鼓動地來」。年輕學子真可愛, 竟然會為只不過是兩個產品 (又不是什麼真理) 爭得面紅耳赤, 並進而延伸至對其生產公司的好惡與忠誠問題。像我這種年逾而立的資訊人員, 只有「吹皺一湖春水 干卿底事」的冷靜。</p>

<p class="calibre2">翻開歷史, 產品好但是敗走市場的例子履見不鮮, 產品不是最好但是銷售非常成功的例子也履見不鮮。至於產品不好, 噢, 那當然就絕沒有機會了。年輕學子的赤子之心我很清楚, 「東西明明好, 為什麼你們不用, 為什麼它沒有成功 ? 不公平。」呵呵, 這個世界上不公平的事可多了, 不是嗎 ? 有人天生是廟公, 有人被譏為乞丐。如果技術好的東西, 一定會成功, 大家死命去搞技術就好了, 不必在乎行銷、服務、技術支援、資源普及、形象建立等等「瑣事」。從這個角度想, 把技術以外的因素考慮進來, 是不是覺得天秤又恢復平衡了一些 ? 噢, 對, 我想起來了, 微軟說要收軟體使用諮詢服務費, 引來網路上一陣口誅筆伐, 這會不會是 IBM 的好機會 ? 變化都是從細微的地方開始的。</p>

<p class="calibre2">這裡有一段我和學生之間的有趣問答：</p>

<p class="calibre2">「老師, 除了 Windows 及 MFC, 您會不會開 OS/2 程式設計的課程 ?」 <br class="calibre5"/>「不會, 我現在還沒有足夠的能力。」<br class="calibre5"/>「您為什麼不學 ?」 <br class="calibre5"/>「工業上應用的東西, 我抱牆頭草主義。只要 OS/2 在市場上成氣候, 我就會學。」<br class="calibre5"/>「那您現在學不學 ?」 <br class="calibre5"/>「唔...呃...嗯...」</p>

<p class="calibre2">我目前有沒有在學習 OS/2 呢 ? 如果我的態度會影響你, 那我就不想說 (責任太大)；如果我的態度不會影響你, 那我正好不必說。</p>

<p class="calibre2">我也曾經在網路上被讀者問及一個問題：</p>

<p class="calibre2">「說真的, 我有個不情之請, 侯 sir 在搞定 OLE 以後何不花點時間研究微軟以外的東西？」 </p>

<p class="calibre2">我是一個平庸的人, 學一個系統已經忙不過來了, 另一個系統 ? 別急, 慢慢來 (我可沒閒著, 呵呵)。</p>

<p class="calibre2">■ 資訊人的焦慮 </p>

<p class="calibre2">九月份大同工學院資訊系邀我演講。主辦同學真好, 還記得上次我在台大演講時說過的話, 真的為我準備了咖啡和座椅。唯一的缺點是沒有準備攪拌棒, 害我喝到兩截式咖啡。</p>

<p class="calibre2">雖然是在颱風夜, 但真是一次溫暖的見面。沒有設定特殊主題, 大家隨便就資訊領域閒聊。席間我感受到同學對出路的焦慮, 尤其面對一波波的新知, 有不勝負荷之感。你知道, 這是沒有什麼良方的, 對於方向的掌握, 對於信心的建立, 都只有在自己一步一腳印的耕耘中才能踏實。我可以告訴你資料的整理與學習的方式, 但那都只是我的經驗, 你得親身試試。如果說有一帖良藥, 就是「別人一天工作八小時, 我一天工作十六小時」。很苦的一帖藥吧！我唸研究所的時候, 系上每一位老師都比學生還用功, 半夜兩點在系館出沒的, 不是學生, 而是老師。同學們想出人頭地, 就要想想別人是怎麼出人頭地的。</p>

<p class="calibre2">我收到一封學生的 EMail 是這麼寫的：「自己很清楚資訊工程這條路, 也很有興趣, 但它發展的速度實在是太快了, 如何才能跟上它的腳步呢？我們不可能在每一項新技術出來之後都花大把時間去學習它吧！就像 MFC 和 OWL 之間。假設目前無法判斷誰將來是市場的主流, 那我們該如何是好？」 </p>

<p class="calibre2">這位同學徬徨的雖然是 MFC 和 OWL, 但如果層面再提高到作業系統, Windows or OS/2 ? 豈不更讓人憂心 ? 我沒有答案給你, 只能說, 培養自己的判斷力, 多接觸實業界的消息, 不要老認為自己還是學生而象牙塔裡很溫暖。不要認為看外文期刊是多了不得不得了的事, 既然你走的是資訊這條路, 你應該有時時緊跟世界脈動的心理準備。</p>

<p class="calibre2">說到培養判斷能力, 其實實力就是後盾, 看看另一位學生的信：「我習慣每兩週去台北一趟, 看看出了什麼新書沒有。如有中意的新書就毫不猶豫的買回家。買的書多, 自然也得看的勤, 所以我幾乎平常都在看書。值得慶幸的是, 我的近視度數已經固定, 不再有增加之虞。我覺得買書看書是一種享受也是一種投資, 當知識和經驗逐漸增長, 心中的充實感真是不可言喻。」</p>

<p class="calibre2">把你自己, 加上你所擁有並且閱讀的書籍, 放到天秤上和別人比一比, 如果自己這邊老是懸在半空中, 那麼就應檢討檢討。</p>

<p class="calibre2">■ 電腦翻譯 </p>

<p class="calibre2">「電腦翻譯」這個詞不太明確, 應該說是電腦相關文章與書籍的翻譯。大概是因為我自己在【無責任書評】中老是說東論西評這嫌那的, 十一月份受邀, 對交大外文系同學做了兩小時的演講, 題目是「科技翻譯 -- 從電腦領域說起 」。</p>

<p class="calibre2">即使我把科技的範圍縮小到電腦領域, 它也是夠廣的了。不知你有沒有過這種經驗, 當別人知道你在電腦這一行之後, 大大小小機殼裡外軟的硬的通通都拿來問你, 如果你告訴他「這是屬於 xxx 的範圍, 我比較擅長 xxx」, 別人就會嘀咕「還不都是電腦 ?」</p>

<p class="calibre2">慢慢地, 我想大家開始了解「電腦是一門很廣的學問」, 不會再有過去責成電機系同學「連個電視都不會修, 書讀到哪裡去了」的情況發生。電腦領域如此之廣, 有應用面, 有技術面, 應用面又有多媒體、文書處理、資料處理、繪圖、美工..., 技術面有程式設計、作業系統、網路..., 程式語言又分 Pascal、C、C++、Basic...。林林總總不一而足, 那麼什麼是翻譯電腦文章所必需的基礎呢 ?</p>

<p class="calibre2">這個基礎絕對不是英文程度, 而是專業知識。基本上, 外文系學生要做電腦文章或書籍的翻譯, 不可能！除非...除非...除非...除非他有足夠的專業知識。</p>

<p class="calibre2">一般人總認為, 翻譯嘛, 英文好就好了, 其他不重要 (或是「不怎麼」重要)。抱這種觀念的人來做翻譯, 對社會是一場大災難, 他們會製造出許多垃圾；對讀者而言更是一場大災難, 因為他們會污染別人智慧的靈台。現今社會中, 大概以電腦書籍與文章所製造出來的翻譯災難最為嚴重。資訊業進步神速, 各國都在全速挺進, 推陳出新的效率高得驚人, 社會大眾對於這方面的知識有極大的需求量。需求量高生意就好做, 和房地產一樣, 再爛的房子只要景氣好照樣賣得出去。學校裡學生多的是, 想賺外快的上班族也多得是, 一點點錢就讓勞資雙方高高興興。把這些因素統統加起來, 成就了我們今天的電腦中譯市場的混亂和低劣。有一位讀者來信說到中譯書時, 用的詞是「墮落」。我驚訝他用詞的創意與大膽。</p>

<p class="calibre2">如果要我列出科技翻譯的要件, 我會說專業素養、中文程度、英文程度和博學程度 四項, 其中尤以專業素養為最, 中文程度次之, 博學程度再次之, 英文程度最不重要。</p>

<p class="calibre2">【關於專業素養】 </p>

<p class="calibre2">沒有專業素養, 在術語和專有名詞的處理上, 以及行文遣字之間就沒有所謂的「內行氣」。有一位在化學公司擔任研發主管的朋友來信對我說：「因為工作的需要, 我經常拿一些專業的技術資料給同事閱讀, 並要求他們翻譯成中文, 通常結果是牛頭不對馬嘴, 我甚至半開玩笑地問他們是否看得懂自己翻譯的文章, 他們老實的說自己也看不懂。」</p>

<p class="calibre2">我拿起手上的「志村大爆笑」(一本關於 Windows NT 的中譯本, 是我的「翻譯名句最佳範本」), 隨手翻出一句如下：</p>

<p class="calibre2"><small class="calibre12">VOID CALLBACK ResultCallBack(HWND hwnd, UINT uMsg, DWORD dwData, LRESULT lResult);</small> When this function is called, it is passed the handle of the window that finished processing message and the message value in the first two parameters. </p>

<p class="calibre2">原譯文為：</p>

<p class="calibre2">當這函式被呼叫時, 它被傳遞已經完成處理前 2 個參數中的訊息與訊息值之視窗的處理指標。 </p>

<p class="calibre2">看不懂, 對不對 ? 就是你勉強看懂了它的文法 (我們很多人都學會了說文解字 -- 被這種書訓練出來的), 它所傳遞的意義也是錯的。如果我懂這技術, 我就會這樣譯：</p>

<p class="calibre2">當這個函式被呼叫, 它的前兩個參數分別 放的是處理該訊息之視窗, 以及該訊息。 </p>

<p class="calibre2">如果我的文字能力好一點, 我就這樣譯：</p>

<p class="calibre2">當這個函式被呼叫, 它的前兩個參數分別放的是「訊息之處理視窗」以及「訊息本身」。</p>

<p class="calibre2">如果我的文字能力再好一點, 我就這樣譯：</p>

<p class="calibre2">當這個函式被呼叫, 它的第二個參數放的 是訊息本身, 而第一個參數放的則是處理該 訊息之視窗的 handle 值。 </p>

<p class="calibre2">也許後面幾例的優劣見仁見智, 但肯定都比原譯文好太多。</p>

<p class="calibre2">專業素養的另一個表現就是對名詞的處理。我曾經看過一篇音樂文章, 出現「索拿大」一詞, 究其上下文意, 原字應該是意大利文 "sonata", 「奏鳴曲」的意思。這樣的翻譯未免太過離譜。然而, 在電腦書籍和文章之中, 多的是這種水準的東西。就有一書把 class library 譯為「等級庫存」。要命, 我還「班級圖書館」咧。</p>

<p class="calibre2">WINDOWSX.H 檔中定義有許多所謂的 message cracker 巨集, 有一本書把它譯為「訊息爆裂子 」, 不仔細看還以為是爆米花或炒栗子。另一本書把 message cracker 譯做「訊息剖析器 」, 就傳神得多。差就差在兩位譯者的專業素養。後一位譯者知道 message cracker 做什麼用, 真切抓出其行為做為譯詞；前一位譯者不懂什麼是 message cracker, 只好查字典亂譯 (crack 正是敲碎、爆裂的意思)。</p>

<p class="calibre2">再看看下面這個例句：「我已經嘗試將樣本應用獨立於另一樣本應用之外」。沒有人把 sample application 說成「樣本應用」的, 如果說「範例程式」, 是不是好得多 ?</p>

<p class="calibre2">情況簡直是荒謬到了極點。</p>

<p class="calibre2">荒謬並不只在於一個譯詞本身的可笑, 而在於譯者連該書所牽涉的領域中的最基本名詞都不知道, 這本書的內容還能讓人信任嗎 ? 荒謬在於出版社到底是怎麼尋找翻譯人員的, 荒謬在於沒有相關知識背景的人竟然敢接下這樣的翻譯工作, 而且就這樣一路平安地完稿校對送廠印刷裝訂出版。一葉知秋, 今天的電腦資訊翻譯品質是多麼令我們痛心疾首。這樣的書籍被一個求知若渴的學子買去, 好有一比：盲人騎瞎馬。學子是盲人, 譯者則是那匹瞎馬。盲人與瞎馬本來應該是命運共同體, 你卻在跌跌撞撞頭破血流之際, 肥了那匹沒良心的瞎馬以及那家沒良心的出版社的荷包。</p>

<p class="calibre2">我們的電腦書有許多是「已經會的人」才看得懂, 「還不會的人」永遠看不懂。其間翻譯書尤其多。這樣的書有什麼價值 ? 你知道, 黑社會有他們自己的「行口」, 混跡江湖的人一個不小心就會被識破「非我族類」, 惹來殺身之禍。如果說榮譽是一個人的第二生命, 我希望從事電腦資訊翻譯的人, 要好好充實自己的電腦知識, 不要一個不小心, 自己謀殺了自己。</p>

<p class="calibre2">【關於中文程度】 </p>

<p class="calibre2">請注意我說的是中文程度, 不是文學程度, 也不是國學程度。自從五四運動以降, 中國人已經不用文言文了, 但是很多人以為白話文好寫, 以為會講話就會寫白話文。真的是這樣嗎 ? 那為什麼有的文章讀起來如沐春風, 有的文章讀起來硬是讓你牙齒咬到舌頭 ? 前面的例子已經說明, 作者或譯者的文字能力會影響讀者對知識的吸收。下面是另一個從雜誌上找來的句子：</p>

<p class="calibre2">使用者雖然能夠直接使用 Visual Basic..., 但仍然無法開發出...,  <br class="calibre5"/>因此 VC++ 對於這方面的需求仍然是最好的選擇。 </p>

<p class="calibre2">如果我把最後一句改為</p>

<p class="calibre2">因此對於這方面的需求而言 VC++ 仍然是最好的選擇。 </p>

<p class="calibre2">你覺得怎麼樣 ? 當然當然, 兩個句子都是可以被看懂的, 如果你覺得侯捷很無聊, 或是你渾然不覺其間的差異, 那就當我沒說吧。</p>

<p class="calibre2">「全盤中文化」與否也值得商榷。"window" 是視窗, 沒有錯, 但 "Windows" 也一定要變成「視窗」嗎 ? 媒體猶可彈性行事, 也許考慮到版面、讀者...諸多因素, 學術界非也必須如此嗎 ? 如果我開了一門 MFC Programming 課程, 學校卻一定要我交出中文課程名稱, 你說我該怎麼辦 ? "UNIX" 並沒有變成「優尼克士」啊, 為什麼 Windows Programming 一定要變成「視窗程式設計」?</p>

<p class="calibre2">對於較艱澀而沒有通用譯名的專有名詞, 我贊成把中英文一併附上, 其間拿捏全賴作 (譯) 者的專業素養。以下是一些過猶不及的例子 (來自我的「名句最佳範本」)：</p>

<p class="calibre2">● 在 1993 年 7 月 27 日我生日這天, Windows NT 小組給我一個作者所能得到的 最佳禮物：他們發佈了 Windows NT 要製造 (manufacturing) 的消息。</p>

<p class="calibre2">● Windows NT Executive 規範 (regulate) 所有這些次系統的記憶體配置 (memory allocation), 線串, 檔案, 與其他資源。</p>

<p class="calibre2">● 記住, 當我在敘述中更加詳論時, 我絕對是製作相關的 (implementation dependent) --- 我是在討論 Win32 API 的 Windows NT 製作。Win32 API 的其他製作則以不同 方式製作了一些 Win32 函式。</p>

<p class="calibre2">● 錯誤檢查應該是任何軟體專案的一大部份。不幸的是, 適當的錯誤檢查會引起 軟體專案的大小 (size) 與複雜度 (complexity) 爆炸性地增長。為了讓樣本應用 更易於瞭解與較不混亂, </p>

<p class="calibre2">● 我喜歡說所有的樣本程式都沒有錯誤 (bug free)。但是, ... </p>

<p class="calibre2">如果連 manufacturing、regulate、memory allocation、implementation dependent、size、complexity 和 bug free 等字眼都必須列出原文, 我們還需要一位翻譯嗎 ?</p>

<p class="calibre2">【關於博學程度】 </p>

<p class="calibre2">作者的博學程度是一本科技書籍或一篇技術文章的文采酵母菌。有一位讀者問我什麼是文采, 我想, 只要讀者能在閱讀時獲得技術以外的喜悅, 被文字本身牽動了情緒 (因文字拙劣而引起的憤怒與悲哀的情緒不算), 這種文字斯可謂有文采矣。</p>

<p class="calibre2">博學的作者, 最令腹笥甚窘的譯者頭痛。「基度山恩仇記」裡有法國文豪大仲馬一生豪華揮霍的影子, 可苦了全世界的譯者。但是博學的譯者最喜歡博學的作者, 這樣他才有的發揮啊。</p>

<p class="calibre2">有一本電腦書 (忘了哪一本), 讀者寫信來問我 "There is no silver bullet" 是什麼意思。如果譯者能加上一段譯註：</p>

<p class="calibre2">「美國人深信月圓之夜狼人出沒。殺死狼人的唯一方法是, 以銀製的子彈貫穿它的心臟。所以, There is no silver bullet 的意思是：沒有致命、有效、一擊中的的方法。」</p>

<p class="calibre2">這樣的文字就頗有可看性了。喜歡隱喻幽默的人可能會覺得這一來味道全失, 畫蛇添足。唔, 尺寸拿捏的確需要注意。</p>

<p class="calibre2">【關於英文程度】 </p>

<p class="calibre2">我的意思並不是說英文程度不重要, 而是, 幾乎我們每一位大專學生都已經具備了足夠的科技翻譯所需的英文程度, 所以其重要性也就不那麼突出。外國人不會把科技文章當成歐美文學來寫, 裡面都只是直述句。譯者之所以看得懂技術內容, 不在於其英文程度, 而在於他的專業素養。對於太長或稍為複雜的句型, 具備專業知識的譯者應該可以推敲個八九不離十, 而且通常是正確的；沒有專業知識的譯者則即使再簡單的句子也只能模擬想像, 而且通常表達不夠精準或甚至是錯的。「精準」這一點非常重要, 讓讀者迷失在模糊的文句中是一個科技文章的譯者 (或作者) 最不可原諒的過失。</p>

<p class="calibre2">隔行如隔山, 我們必須承認這句話。</p>

<p class="calibre2">我的母校的學弟妹們一想到科技翻譯, 首先想到要聽聽這個領域的人的意見, 基本上已經是一個好的開始。從事文字工作的人, 如果有著「自己的作品是自己要看的」的心理, 成績就不會太壞。店家不會把餿水油加到自己要吃的麵裡。</p>

<p class="calibre2">侯捷不是專業翻譯人員, 卻在這裡夸夸而言, 實在是基於一份熱誠。任何想培養電腦專業知識的人, 如果覺得目標離自己太遙遠, 這裡有一個例子：侯捷大學唸的是土木, 研究所唸的是動機, 電腦知識幾乎全憑自修。如果我可以, 你當然也可以。</p>

<p class="calibre2">■ 我們需要一本軟體專業期刊 </p>

<p class="calibre2">我觀察咱們通用性的電腦專業雜誌, 大部份是這樣子型式：外稿常談軟體, 內稿常談硬體。硬體可以談分析、談測試、談效能評比, 這對採購是一大福音, 也提供了某種層面的硬體常識。由於很少有人能夠獨力完成硬體測試的工作, 投資報酬率也一直是個問題, 所以責任就由雜誌社來扛。至於軟體, 不論是應用心得或技術心得, 比較適合單打獨鬥。不會有人在雜誌上教我們如何開發一個大軟體, 那適合放在一本書上而不是一月一期的雜誌。</p>

<p class="calibre2">讀者來函通常問的是硬體問題。誰和誰相衝啦, 誰又和誰搭配最好啦...。我很希望看到一本完全軟體技術的專業期刊 (不是雜誌唷), 談的問的都是軟體技術。國內程式工作者這麼多, 讓我代為請命吧。只要深度夠, 我想應該可以維持生存。大家的看法如何 ?</p>

<p class="calibre2">■ 我們需要更多專業作家 </p>

<p class="calibre2">我曾經在【無責任書評】中呼籲, 當這個環境進步到一個層次, 就養得起更多的專業作家。看看國內雜誌書籍的內容, 就技術層次和文字水準而言, 我覺得我們需要更多的專業作家。</p>

<p class="calibre2">■ 拜拜, 1995 </p>

<p class="calibre2">年終氣氛真好呀。經過一年, 侯捷才重回到這裡, 但是下一篇文章絕對不會讓你等太久。拜拜, 1995。</p>
</body>
</html>
