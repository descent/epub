<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>http://www.grabmybooks.com</title>
    <meta content="http://www.w3.org/1999/xhtml; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../stylesheet.css" type="text/css" rel="stylesheet"/><style type="text/css">
@page {
    margin-bottom: 5pt;
    margin-top: 5pt
    }
@font-face {
    font-family: "DroidSans", serif, sans-serif;
    src: url(res:///ebook/fonts/DroidSansFallback.ttf)
    }
</style></head>
  <body class="calibre">
<h2 class="calibre1">讀者來函 無責任書評 3</h2>
<p class="calibre2">讀者來函 </p>

<p class="calibre2"><span><img src="img/img63.jpeg" alt="img63.jpeg" class="calibre10"/></span></p>

<p class="calibre2">侯大哥:</p>

<p class="calibre2">4:30！一口氣看完您的大作（無責任書評２）, 才發現已是長夜將盡, 黎明即將到來...</p>

<p class="calibre2">五味雜陳的心情在胸中翻來攪去, 因的是您將心中許多心情如此誠摯剴切的表達, 而其中有許多是小弟深埋已久卻力有未逮..., 我想當社會擺脫為三餐無著的恐懼之後, 才能思考更深層的價值觀吧！</p>

<p class="calibre2">原諒我有久旱逢甘霖、相見恨晚的心情, 而急切的想與您聊聊。我只是一般人眼中「小時了了, 大必不佳」的典型, 求學時自恃博學好記, 對課業總是輕忽, 老想憑己力打破長輩的單一價值, 年紀漸長才驚覺所付代價太高, 然已匆匆數年乎！可以說失去了人生最精華的 10 年。就業之後因求學時荒廢不少, 我幾乎是拼命工作（意指學習與工作有關的任何知識）, 也見識社會種種怪現象, 例如只知怎麼做卻不知為什麼、藏私、同事朋友不知身處轉變中的大時代...等等, 這些常令我憂心忡忡, 難道中國人永遠沒有學到教訓嗎? 普遍沒有懷疑（獨立思考）與研究的精神。我倒不是說每人都要做學術研究, 而是每個人應該有打破砂鍋問到底的精神。這些都是建立各種紮實技術和知識的必要條件！</p>

<p class="calibre2">大環境如此瀰漫投機速食的氣氛, 有識者幾希！電腦領域是邏輯與思考的組合, 更需要上述的精神。為了寫程式, 必會發覺其他的牽扯, 而為了這些牽扯（也許只是小如 Object 的使用）, 又發現更多的牽扯...每一點都是一個領域, 環環相扣, 絲毫取巧不得。常感嘆台灣空有資訊大國美稱, 經典軟體卻付之厥如。雖說重要技術皆為外國主導, 文件亦以英文為主, 國人了解不易, 但基礎概念與理論卻是我們可以慢慢下工夫追的, 只要開始就不會晚, 磋跎只會永遠仰人鼻息！</p>

<p class="calibre2">欣見終於有人願意開始做。也許您限於自身生涯規劃, 暫時停筆; 但拋磚引玉、撼動利慾薰心、投機速食的社會風氣, 功不可沒。就算很多人無法完全看懂您講述的知識, 但匡正風氣意義更大！這是一個結合人類所有知識的新領域, 本就需要所有人共同努力, 有些讀者要求您研究所有領域（又是中國人的病症: 等著坐享其成）, 大概是源於認識不夠; 稍為深入了解電腦的人, 就知道裡面除了大恐龍, 還有許多新的未知的細菌！</p>

<p class="calibre2">求知始於無知！</p>

<p class="calibre2">東方已然破曉...從唾棄國內電腦書籍, 改買英文原著之後, 又耗費太多時間挑書。謝謝您的書評, 讓我迅速知所取捨。偶然驚見Inforist Press 及侯大哥, 心中激動不已！希望台灣目前的問題種種亦是長夜將盡...</p>

<p class="calibre2">祝 不被那些不自反省的讀者所傷 (我看有些書中回函, 快氣瘋了！）</p>

<p class="calibre2">學生 汪玟汎86.10.11</p>

<p class="calibre2"><span><img src="img/img63.jpeg" alt="img63.jpeg" class="calibre10"/></span></p>

<p class="calibre2">Dear 侯 sir: </p>

<p class="calibre2">淩晨四時許, 窗外傳來稀疏的兩聲, 桌上堆著各式文件和程式碼, 煙灰缸裡也躺滿了煙蒂。護目鏡映出一臉倦容的我 (不過我倒不會想用滑鼠畫張自畫像 :)</p>

<p class="calibre2">你對我的作品可真熟悉 :) ！ </p>

<p class="calibre2">大四時曾在元智旁聽過一學期您上的 MFC programming, 後來因為準備研究所考試, 就很少再寫程式了（除了偶爾幫朋友 oem 一些計概小練習）, 想不到現在動起手來會變得如此生疏, 連工具都用得不太順手！人類的慣性和惰性真是可怕啊！</p>

<p class="calibre2">記得今年考試前您曾告訴我說您以前最弱的科目是工數, 後來卻變成最強的科目, 當時我天真地以為用其他科可以補強。雖然我幸運考上了研究所, 現在卻又必須面臨數學的考驗 -- 因為老闆的研究領域是影像壓縮！看來我應該以您為目標, 立下遠大的志向才是。</p>

<p class="calibre2">我的學校在花蓮（離您印象深刻的慈濟醫院約 20 分鐘車程）, 在這個群山環抱的地理環境下 K 書算是相當適合的吧！我還記得當初從台北車站坐計程車到考場時, 和司機聊了一些時事（正是白曉燕案發生不久）, 下車時他還語重心長地說台北太亂了, 到東部讀書不錯啦..., 命運真的是太神奇了！</p>

<p class="calibre2">我好懷念花蓮之行, 懷念與慈濟的緣份。或許下次去花蓮時, 順道看訪你。 </p>

<p class="calibre2">從五專、大學到現在, 看您的文章也有幾年了, 現在翻閱您的書還時會有種幸褔感 -- 幸好台灣資訊界有這個人, 也幸好我知道這個人, 否則我不知道還要查多少單字, 還要在多少本書面前遲疑該不該買！撇開您其他的著作、譯作不談, 光是「無責任書評」就值得所有資訊系學生買來看！說到這裡, 我不得不問, 無責任書評３什麼時候才會出現呢? 還是如鍾子期先生所言, 再也不會有無責任書評的出現了? </p>

<p class="calibre2">喔喔, 這可不是出來了, 呵呵。我要感謝像你這樣的讀者; 書評的繼續, 有很大的成份是因為像你這樣的來函。 </p>

<p class="calibre2">最後要請教您一件事, 不知道您的　homepage URL　為何? 我猜想上面一定有許多好料。如果可以的話, 把您那位漂漂老婆的照片也多放幾張吧！我的一位好友自從看了您夫人的玉照之後, 下定決心就算以後成就不如你, 也要找比她更漂亮的老婆 :)</p>

<p class="calibre2">祝 身 心 健 康</p>

<p class="calibre2">sincerely yours Tempest Guo<br class="calibre8"/>1997.10.22 05:23</p>

<p class="calibre2">奇怪, 你的好友怎麼可能看過美靜的像片呢?  </p>

<p class="calibre2"><span><img src="img/img63.jpeg" alt="img63.jpeg" class="calibre10"/></span></p>

<p class="calibre2">侯老師您好:</p>

<p class="calibre2">冒昧寫這封信給您！我今年就讀交大資工碩士班一年級。... 我知道您一定很忙, 今天寫信給您, 是因為我對寫作一直很有興趣, 但是對於在國內寫書這條路, 心理著實有許多疑惑, 想向您請教。如果能獲得一些您寶貴的意見, 我真的會非常高興, 因為您是圈內最富盛名的作者, 而我, 也一直是您忠實的讀者。</p>

<p class="calibre2">我從小隨父親到美國 Maryland, 就讀當地的小、中學。小學一年級的作文「我的志向」, 我就寫說希望將來能做個作家。回台的不久前, 我終於在 Maryland 舉辦的 State Writing Contest 中, 拿下了全校第一名。誰也沒料到, 我不是在美國長大的, 那時我才去了美國四年。</p>

<p class="calibre2">我從國小就開始玩電腦寫程式了。回國以後, 掙扎了半死, 終於考進交大。後來由於被老師「壓榨」的緣故, 對於 WinSock 的寫作有了一些經驗。也是那時, 經由學長的推薦, 第一次「破例」買了一本中文書, 就是您的 MFC（舊版, 小小的, 第一本, 一時忘了書名, 書被借走了）。拿到書先看序, 看完心理十分震撼, 真過癮！後來我把那本書當成小說一樣, 帶在身邊, 坐車的時候看, 等女朋友的時候看。看您的書, 真是一種享受, 也讓我對國內作者的水準, 有了不同的認識。</p>

<p class="calibre2">也算是您的啟發, 我們幾位同學出版了一本 WinSock 程式設計的書。不瞞您說, 整個寫作的過程, 您的書被我們當作 template 使用: 不論是編排的方式, 文句的寫作, 章節的命名, 敘述的方式等, 都是不斷參考您的大作所寫出來的。在文句與表達中, 我們盡力向您看齊, 但能力有限, 經驗不足, 常常望著您的文筆嘆息, 為何就是寫不出像您這樣的文章, 也曾數度想要放棄, 但是大家還是咬著牙根把它寫完了。</p>

<p class="calibre2">我們是抱持著只求好, 不求回報的心理去完成它的。整本書從寫作、排版、插圖美工, 一直到校稿、做封面、印雪銅、寫落版單, 都是我們一手包辦的！那時曾經好幾個晚上睡在出版社的地板上, 一早爬起來回學校考試, 考完趕回來繼續印雪銅..., 現在想起來, 真是不錯的回憶！</p>

<p class="calibre2">可惜好景不常, 書出到現在, 已經快一年了, 竟然賣不到 2000 本。其實我還很想寫, 但是我已經找不到合作夥伴了！我想請教侯老師的是, 依您過來人的經驗, 如果我想要往後繼續走這條路, 譬如像您當初一樣, 一面在工研院磨練經驗, 一面寫寫書, 最後 turn pro, 會不會沒飯吃啊? 我並不是那種想開好車、買洋房的人, 只要能做自己有興趣的事, 不要跟老婆處得太差, 就可以了。但是每每跟同學談到走這一行, 大家都說我瘋了！他們都說, 「喔, 拜託, 我不敢想像我四十歲了還要在那邊看 MSDN」。其實我覺得沒差, 不過還是有年齡的壓力, 會不會到時候有了老婆孩子, 還要跟年輕人拼, 每天搞到一兩點? 寫書靠的就是實力, 想必要一直 study, study, study！老師是否能給我一些建議, 或分享一下您的經驗呢? 不勝感激！ </p>

<p class="calibre2">忠實讀者 黃耀文敬上</p>

<p class="calibre2">寫作是經驗累積後的一次湧現。你一定要進入工業界去獲得實際經驗, 經過磨練後, 視野和實力在層次上都會提高, 寫出來的東西當然也就不一樣。只有那種非常資深, 技術基礎非常紮實的作家, 他們才有可能先定題目, 再學習, 再寫作, 而後完成一本好書（好書唷）。如果你的基礎厚實, 即使 40 歲, 看 MSDN 也是輕而易舉（絕對比 coding 輕而易舉）。 </p>

<p class="calibre2">創作是生命的全部。只有把全付精力放在創作上的人, 他的作品才有成為 top 的可能。許多人都希望不必為謀生而工作, 某些人比較幸運, 工作有趣又有錢拿; 而對某些人來說, 工作成為性靈寄託之所在。看著好了, 當這種「把寫作當作性靈寄託」的電腦作家出現, 別人都別玩了, 因為人家玩業餘的, 他卻是用心靈與生命來灌溉。 </p>

<p class="calibre2">既然立志成為一個文字工作者, 除了技術本位, 你還得在組織能力和用辭遣字方面多下功夫。你一定要設想你是你的書籍的讀者, 調整心態, 常常詢問自己: 「這樣的流程順嗎? 會不會突兀? 這樣的詞句容易懂嗎? 會不會誤解? 」一篇好的技術文章, 一本好的技術書籍, 先不談其內容, 就文字與結構而言, 一定是反覆多次調整、沉澱、再修潤、再沉澱後才出爐的。急就章的東西, 絕不會是好東西。許多書籍的作者自序都喜歡在最後面加上一句「本書倉促付梓, 誤謬在所難免」, 不知是從誰從什麼時候開始流行的; 我最討厭這兩句話！誰叫你倉促付梓來著?  </p>

<p class="calibre2">組織能力和文字順暢都不難達成, 只要你對寫作有一份熱愛, 你自然會反覆琢磨。而如果要更上層樓, 寫出個人風格, 那就要博瀏群書, 並且多充實自己的人文涵養。 </p>

<p class="calibre2">我曾在 BBS 上看到網友貼出這樣的信:  </p>

<table border="1" class="calibre4"><tr class="row"><td class="calibre5"><span><img src="img/img85.jpeg" alt="img85.jpeg" class="calibre9"/></span></td> <td class="calibre5">侯先生的書我幾乎都有, 我已經不全然把它們歸類到科技類別, 畢竟加上人文的涵養, 科技才能歷久彌新。<br class="calibre8"/></td> </tr><tr class="row"><td class="calibre5"><span><img src="img/img85.jpeg" alt="img85.jpeg" class="calibre9"/></span></td> <td class="calibre5">我喜歡侯先生的寫作風度, 他的文章中帶有另一種文學素養, 而且其程式語言的能力不容懷疑。我稱他的文章為「帶有感情的技術文件」。 </td> </tr></table><p class="calibre2">這是對一位電腦技術文字工作者最大的讚美了, 我非常感動。我們應該朝這個目標努力。 </p>

<p class="calibre2">你很優秀, 也很用心, 是第一個告訴我要以技術寫作為職志的人, 又是我的小學弟, 我想和你聊聊。這樣子, 來我的研究室, 我請你喝咖啡。 </p>

<p class="calibre2">侯老師您好: </p>

<p class="calibre2">您的信有讓我受寵若驚的感覺, 有機會跟崇拜已久的您見面, 是我從來都沒有想過的。當然, 心中不禁也有些壓力。我只是個學生, 沒有經過工業界的歷練, 更不是資深的工程師。讓您招待我, 真是覺得擔當不起！然而這麼難得的機會, 能夠當面向您請益, 我相信對自己將會有很大的幫助。所以, 懷著既興奮又緊張的心情, 我決定接受您的邀請。不好意思, 打擾您了！</p>

<p class="calibre2">您跟我說, 「寫作是經驗累積後的一次湧現」, 我覺得一點都沒有錯, 所以我想我們近幾年之內可能不會再寫了。但是這幾年資訊界的變化頗大, 對於往後該怎麼學, 怎麼走, 大家心中著實有些疑惑。我很想聽聽老師的看法, 並回來與同學分享。</p>

<p class="calibre2">事實上, 這次 seminar 第一次上課時, 老師曾經有問我們全班, 大家有沒有特別希望系上請到哪些人來演講。那時, 您是唯一被大家提到的。如果您有時間, 大家真的會很高興能夠與您見面, 聽您上課。</p>

<p class="calibre2">我不多說了, 謝謝老師的邀請！</p>

<p class="calibre2">學生 黃耀文敬上</p>

<p class="calibre2"><span><img src="img/img63.jpeg" alt="img63.jpeg" class="calibre10"/></span></p>

<p class="calibre2">侯先生, 您好, 我是資工一年級學生, 有些問題請教您: </p>

<p class="calibre2">有幾本 Windows programming 的經典之作, 您建議看原文書, 但您亦有譯作, 我信任您的作品水準, 那還需要看原文嗎? 我的英文程度還可以, 但是 Windows programming 是我未曾接觸的, 面對一個新的東西, 看原文好嗎? </p>

<p class="calibre2">有好的中譯本或中文書, 當然我建議看中譯本或中文書。我鼓勵大家要有良好的英文閱讀能力, 為的是我們的中文高階書籍實在太少了。 </p>

<p class="calibre2">我還想看作業系統的書, 需要那些基礎? 我目前對 C 學了一些, 但程式經驗不夠, 也還沒學 data structure, 剛接觸 C++ 的 OO 觀念。</p>

<p class="calibre2">如果是 Windows 作業系統, 你需要先對 Windows SDK Programming （不是 MFC Programming）有所認識; 不需要 data structure 基礎, 也不需要 C++ 基礎。在 SDK Programming 過程之中, 可以學到不少 Windows OS 的觀念, 此後進入 Windows OS 的專門課程, 水到渠成。</p>

<p class="calibre2">有兩本很棒的 SDK 書籍: </p>

<p class="calibre2">1. Programming Windows 95（Charles Petzold / Microsoft Press）<br class="calibre8"/>2. Windows 95 : A Developer's Guide（Jeffrey Richter / M&amp;T Books）</p>

<p class="calibre2">這兩本書都能夠使你對於 application 與 Windows O.S. 之間的交互關係有不錯的瞭解, 尤其是第２本。全然專注於 Windows O.S. 的書籍, 有三本很棒, 請參考前面的「<a href="http://jjhou.boolan.com/review3-7.htm" target="_blank" class="calibre3">Windows 系統深耕</a> 」一文。 </p>

<p class="calibre2">謝謝您, 也許您會說我太急, 但我願意花更多更多的時間學更多更多的東西, 您建議的我會全力做到。</p>

<p class="calibre2">急是好的, 表示你的企圖心旺盛。但是學習的步驟要按部就班來, 基礎打好最重要。請參考前面的「<a href="http://jjhou.boolan.com/review3-10.htm" target="_blank" class="calibre3">選義按部, 考辭就班</a> 」一文。 <br class="calibre8"/>祝學習順利 </p>

<p class="calibre2"><span><img src="img/img63.jpeg" alt="img63.jpeg" class="calibre10"/></span></p>

<p class="calibre2">您好 ~ 侯先生:</p>

<p class="calibre2">首先謝謝您上次幫我將所該看的　Windows Programming 的書單列好。最近我又遇到一個矛盾點, 我有一個室友, 程式能力頗強, 近來跟他聊到有關學程式設計的想法, 也說到自己決定要從SDK 紮根, 他卻秀了幾個他以前所寫的組語程式, 讓我看得眼花撩亂。第一次看到有人用組語寫出 menu 型的界面, 這是我從使用 RAD 工具以來不太能想像的事情。又聽他說一些啥麼 Protected Mode 和 Real Mode 的差異, 還說啥麼因為 DOS, 就算 Win95 也還是有提供 Real Mode 的環境, 所以病毒才很容易出現, 像 Linux, unix 等作業系統就幾乎沒有...這對於基礎頗差的我來說, 實在是聽得"霧煞煞"。雖然如此, 卻在心中又興起了「是否該學學組語」的念頭。<br class="calibre8"/>請問侯先生, 是否我在為 Windows Programming 紮根前, 應該先對組語再下番工夫呢? 還是直接深入 C/C++ 即可呢? 因為總覺得似乎組語較能跟週邊直接聯繫, 我想這樣應該對電腦的認識也應該更清楚些...<br class="calibre8"/>麻煩侯先生再次解惑, 謝謝.... </p>

<p class="calibre2">chilong</p>

<p class="calibre2">如果你要學寫 device driver, 就要對 assembly language 擁有基本的功力（不過現在也已經有 C/C++ 工具可幫你完成 device driver 了）。如果你要寫 application, 我想不必學 assembly language。 </p>

<p class="calibre2">其實我想學組語的一個原因是因為目前用 VC++, 有時候 debug 會跑到組語程式去, 看都看不懂, 使我不知該怎麼去 trace 它。而學程式的人都鼓勵後進常去 trace code, 這樣才會進步較多...</p>

<p class="calibre2">是沒錯, 但依我對你的瞭解（你寫過好幾封信來）, 你應該先把 assembly 擺一邊, 先學對你最重要的東西。 </p>

<p class="calibre2">很多東西都是看侯先生與 WeiPo 先生的對話才學到的, 深深警覺到, 沒實力的話, 出去就算是研究所畢業, 也是被電假的...</p>

<p class="calibre2">的確！你有此覺悟, 很好。 </p>

<p class="calibre2">而我那位組語起家的室友仍暗示性地勸我要學學組語, 在一些程式速度上面才能加強, 例如 Game 的圖形...</p>

<p class="calibre2">不, 現在早已沒有人使用 assembly 在 Windows 環境中加強 graphic display 的速度了, OpenGL、DirectX 等等都是高階好用又速度不錯的東西。我唯一知道一本在Windows 環境下使用 assembly 的書籍, 是 R&amp;T Books 的Windows Assembly Language and Systems Programming, 國內沒有進口, 我正想辦法買。 </p>

<p class="calibre2">而且每當別人（非本科系的）的人問我一些電腦知識, 例如如何存取 File, 我只能跟他說用 fopen(..) 等等function, 卻說不出個電腦開檔的步驟是啥麼、怎麼讀磁頭、磁柱是什麼等較細部的概念...</p>

<p class="calibre2">如果你走軟體路線, 實在不需要知道這些東西。要學的東西太多了, 你不可能每樣都學, 應先建立屬於你自己的專長。 </p>

<p class="calibre2">學生一直認為電腦要學好, 就應該能講出個所以然來, 而不是只會 call 那幾個 fuction。學生想學組語也是有些這方面的因素, 畢竟 C or C++ 還是太多 library 的東西, 愈來愈方便的狀況下造成大家只會 call function, 實際能講出個全然道理的卻不多,</p>

<p class="calibre2">如果你走軟體路線, 在 function call 的背後, 你應該理解的是作業系統的原理, 以及那些 API function 的實際動作。這方面有兩本很棒的書: Windows Internals 和Windows 95 System Programming Secrets, 作者都是 Matt Pietrek, 前一本書 for Windows 3.1, 後一本書 for Windows 95。 </p>

<p class="calibre2">這也是我羨慕我那室友的地方, 每次都能口沫橫飛地講一堆東西出來。這是我的見解, 也許在知識不夠豐富的情況下講錯了些東東, 還請侯先生給我點指點。最後還是請侯先生在我學組語這方面的困惑再釐清一下, 謝謝。</p>

<p class="calibre2">擁有 assembly 基礎當然是有用的, 但如果你要寫的是 application 而非 device driver, 我認為適可而止就好了, 不必拿 assembly 當大刀耍。舉個例子, Matt Pietrek 的 Windows 95 System Programming Secrets 這本非常棒的 Windows 作業系統書籍裡, 第 10 章有個鬼斧神工的 SPY 程式, 由於做到相當低階的動作, 因此對於 function call 的stack 狀態、calling convention, 以及一些 machine code, 就得有起碼的認識, 而這些知識通常是在 assembly language 課程中學得的。</p>

<p class="calibre2">我的結論是, 擁有 assembly language 能力固然很好, 但你必須挑對你邊際效用最高的來學習。至於什麼東西對你的邊際效用最高, 你自己應該清楚, 因為你最清楚你要走什麼路線, 已有什麼基礎。多和你的老師學長當面聊聊, 也會有幫助。我相信老師學長都會很樂意給你意見的。 <br class="calibre8"/></p>
</body></html>
