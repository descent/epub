<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>http://www.grabmybooks.com</title>
    <meta content="http://www.w3.org/1999/xhtml; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../stylesheet.css" type="text/css" rel="stylesheet"/><style type="text/css">
@page {
    margin-bottom: 5pt;
    margin-top: 5pt
    }
@font-face {
    font-family: "DroidSans", serif, sans-serif;
    src: url(res:///ebook/fonts/DroidSansFallback.ttf)
    }
</style></head>

<body class="calibre">
<h2>到此躊躇不能去</h2>
<p>侯俊傑先生您好：</p>

<p>目前我在一家公司負責管理工作, 常常需要電腦的幫忙。閒暇時自己也
弄弄電腦。對於程式設計尤感興趣。自 1986 年來, 我已學習過
Basic、dbase4、pascal6、assemble 等程式語言, 後來自修 Visual Basic
但不夠深入。
</p>

<p>看了您的文章後, 對於個中內容很有興趣, 並想能如文中所述一步一步
地走上長征路, 更希望能達成長久以來的志願：成為一位業餘或專業的程式設計者（如果有機會的話）。但是, 時下電腦程式設計之發展真可謂一日萬丈, 不知應從何處著手。且若不能走對路, 恐怕就難以追及了。為了達成上述目標, 以我目前所懂得的微薄見識, 是否該由 C 語言按步就般地學起, 或有其他更有效的方法？有關此事冒昧懇請您不吝將應進修之課程詳盡暢教是荷。如蒙您的指導, 誠然感激不盡。謹此順頌時祺。
</p>

<p>李松輝 1997/1/2 </p>

<p>李松輝先生：</p>

<p>來信經 RunPC 雜誌社轉知。由您之自述, 對您略有了解。程式設計的確有趣, 但在這個高度分工、競爭激烈的社會, 我想只有「專業」程式員可能在這一領域生存。過去有一段時間, 大約 80 年代中期, 不少人靠著 dBase、Clipper 程式寫作, 為零售店、洗衣店、錄影帶出租店寫些資料管理軟體, 在正業之外發點小財。PC 作業系統由 DOS 進入 Windows 之後, 複雜度大增, 這種機會就很困難了。強調學習容易、輕鬆上路的 application framewrok、RAD（Rapid Application Development）等開發工具與整合環境雖然不斷推出, 但那些美麗的形容詞都是在已經打好基礎的人身上才能開花結果 -- 我一直是這麼認為。只會依樣畫葫蘆做幾個範例程式, 然後就停滯不前, 不能說是開花結果。</p>

<p>時有讀者朋友寫信給我, 除了技術的討論之外, 大抵就是尋求我對於諸如此類問題的想法。對於科班學子 , 我總是勉勵加打氣, 期勉他們從最根本把基礎紮好：作業系統要下功夫, 程式語言從 C/C++ 學起, 不要一開始就（並且一直只）接觸簡單的 RAD 工具; 資料結構、系統分析能力、軟體工程能力要多多培養。但是對於另有專業知識、已經進入社會工作一段時間（因而年紀不會太小）的朋友, 對於那些只因緬懷曾經有過的綺麗夢想, 或因程式設計的一些小小成就感刺激而亟欲掙脫桎梏的的朋友, 我希望他們把事情看真切一點, 腳步放謹慎一些。</p>

<p>做為日常應用或輔助工具, 我認為學習 Visual Basic、Delphi 等能夠快速獲得一定成果之語言工具, 應該夠了。若是把 Word、Excel 等軟體學好, 再把其巨集（也是一種簡易的程式設計）學會, 也是很不錯的了。需要管理大量資料者, 把 HTML 學起來, 不僅可以寫 HomePage 往 WWW 站台放, 搭上世界潮流, 讓自己和親友樂一樂, 也可以利用它強大的 hyperlink（超鏈結）功能, 把文件好好整修存檔。從上述角度出發, 既實用又容易獲得成就感, 也不必冒另起爐灶的風險。聽說 Word97 可以把 .DOC 檔直接轉換為 HTML 檔, 你看看, 使用者多有福氣！再也不必誰去操心什麼 &#60;HEAD&#62; &#60;BODY&#62; &#60;APPLET&#62; 了。應用軟體之間的整合性不斷強化, 而把它們嫻悉運用, 也是一種技術, 一種藝術。</p>

<p>C++ 以及 Java 等物件導向語言, 非等閒能適應之, 實在說, 門檻頗高。那是給專門在「電腦科學」領域裡打滾的人（科班生）用的, 它們有學術價值, 也有實用價值, 當程式模組很大, 數萬行甚至數十萬行碼時益能彰顯其價值。但是我不認為身處「電腦科學」領域以外的人, 應該去學習它們。竟然有些報紙開設小專欄, 教大眾什麼是 Java 語言, 我覺得實在是太過了。有不少人認為 C/C++ 才正統, 流著高貴的血液。沒這回事！對普羅大眾而言, 什麼東西都是「夠用就好了」。 </p>

<p>我想, 您可先確定自己學習程式設計的動機與目的 , 再決定從哪一條路走起。依您的基礎, 我初步認為 Delphi 頗為適合, 因為您學過 Pascal, 而Delphi 以 Pascal 語言為基礎。它既是快速開發工具, 而且也蔚為風潮, 資源易得。如果您細想之後決定不讓自己早生華髮或聰明絕頂, 決定「只」把 MS Office 或 Lotus SmartSuite 好好精通一番, 我也覺得可喜。</p>

<p>若還有方向上的疑惑, 或需要更多的資訊, 可直接與我聯絡。<br/>FAX 03-5733976, email <a href="http://jjhou.boolan.com/mailto:jjhou@ccca.nctu.edu.tw%E3%80%82%E7%A5%9D%E4%B8%80%E5%88%87%E9%A0%86%E5%88%A9" target="_blank">jjhou@ccca.nctu.edu.tw。祝一切順利</a> 。</p>

<p>侯俊傑 1997/01/06</p>

<p>P.S. 正欲 FAX, 才發現您的傳真號碼是 848 開頭, 地址是 Vietnam「越南」, 真令我驚訝。well, 拜科技之賜, 
天涯若比鄰。實為有趣。</p>

</body>
</html>
