<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>http://www.grabmybooks.com</title>
    <meta content="http://www.w3.org/1999/xhtml; charset=utf-8" http-equiv="Content-Type"/>
  <link href="../stylesheet.css" type="text/css" rel="stylesheet"/><style type="text/css">
@page {
    margin-bottom: 5pt;
    margin-top: 5pt
    }
@font-face {
    font-family: "DroidSans", serif, sans-serif;
    src: url(res:///ebook/fonts/DroidSansFallback.ttf)
    }
</style></head>
  <body class="calibre">
<h2 class="calibre1">無限延伸 DOS 視野</h2>
<p class="calibre2">Extending DOS 這本超重量級的書久享盛名，<br class="calibre3"/>作者群的名字就等於口碑。<br class="calibre3"/>幾乎每一篇講到保護模式的文章<br class="calibre3"/>都會列出此書為參考書籍。</p>

<p class="calibre2">另外我也介紹一本資料詳實完備的工具書。</p>

<p class="calibre2">今天要為各位介紹的是一本超重量級的書，不只因為它在保護模式這一領域久享盛名，而且因為作者群講出來會嚇死人，那就是由 Ray Duncan 領銜主演的Extending DOS。</p>

<p class="calibre2">這本書的作者除了天王中的天王，巨星中的巨星，我個人死心塌地的偶像 Ray Duncan (他是 PC Maganize [Power Programming] 專欄作家) 之外，還有 Windows 領域的巨擘 Charles Petzold (Programming Windows 作者)，以及 Dr. Dobbs Journal、PC Magazine 自由作家的 Andrew Schulman (Undocumented DOS、Undocumented Windows 主要作者)。這幾位先生的名字一出現，看都不看內容我就可以請店員幫我把書包起來帶走。除此之外還有 M. Steven Baker ，他曾在 Programmer's Journal 上發表過一篇DOS Extender stretching the limits，令人印象深刻；Stephen R. Davis ，他是A Guide to Programming the DESQView Multitasking Environment 一書的作者；Robert Moote ，Phra Lap 公司的創辦人之一兼副總裁，也是 386|DOS-Extender 的創造者。</p>

<p class="calibre2">Ray Duncan 把這些重量級又具有實務經驗的人士集合起來，完成了這本大哥大大書籍，莫怪幾乎每一篇講到保護模式、DOS Extender 的文章都會列出此書為參考書籍，它在這個領域實在太重要了。</p>

<p class="calibre2">說到參考書籍，存在很有趣的現象。誰的知識是自己創造的 ? (原創者 ? 找 IBM、Microsoft、Borland、Phar Lap 的工程師去)，所有我們的知識都來自於別人的著作。當然，消化咀嚼後就是自己的了。那麼如果你想把這些心得公開，要不要列出那些重要的知識來源 ? 在學術界，[Reference] 似乎愈多愈好，表示自己資料收集愈詳細；但我很少看到台灣的電腦書明白列出 [Reference]，大概是不願滅自己威風長他人志氣，又替別人作免費廣告。不過 Andrew Schulman 的大部份著作後面都有一個洋洋灑灑的 Annotated Bibliography (附註解的參考書目) 令人印象深刻外。上次我說 Andrew Schulman 是 Phar Lap 公司的工程師，是不是使你對他撰寫 Undocumented DOS 一書有恍然大悟之感 ? 再給各位一個恍然大悟 : Schulman 是 Dr. Dobb's Journal 的書評作家之一。讀破萬卷書，莫怪下筆有如神。「附註解的參考書目」?! 哇塞，簡直是火力展示嘛 !</p>

<p class="calibre2"><span><img src="img/img2.jpeg" alt="img2.jpeg" class="calibre8"/></span></p>

<p class="calibre2">背景資料 :<br class="calibre3"/>書名 Extending DOS (1st edition) <br class="calibre3"/>作者 Ray Duncan, Charles Petzold, M. Steven Baker,<br class="calibre3"/>Andrew Schulman, Stephen R. Davis, Ross P. Nelson,<br class="calibre3"/>Robert Moote<br class="calibre3"/>出版 Addison Wesley<br class="calibre3"/>頁數 10 章，432 頁<br class="calibre3"/>售價 US$ 22.95<br class="calibre3"/>出版 1990/04<br class="calibre3"/>磁片 no</p>

<p class="calibre2">1. The IBM PC Programming Architecture<br class="calibre3"/>2. Expanded Memory and the EMS<br class="calibre3"/>3. Extended Memory and the XMS<br class="calibre3"/>4. 80286-based Protected-Mode DOS Extenders<br class="calibre3"/>5. 80386-based Protected-Mode DOS Extenders<br class="calibre3"/>6. The Windows Operating Environment<br class="calibre3"/>7. DESQview<br class="calibre3"/>8. VCPI for EMS/DOS Extender Compatibility<br class="calibre3"/>9. The DOS Protected-Mode Interface (DPMI)<br class="calibre3"/>10. Multitasking and DOS Extenders </p>

<p class="calibre2"><span class="imgBig"><img src="img/img14.jpeg" alt="img14.jpeg" class="calibre4"/></span></p>

<p class="calibre2">這本書有一個小標，在書左上方歪歪斜斜地擺著 : Programmig MS-DOS for the 1990s 。DOS 的舊年代已經隨 IBM PC 的第一個十年慶 (1981-1991) 結束了。九十年代的 PC 軟體絕對要走入CPU 保護模式中，才能夠在市場上有競爭力。過去應用軟體想突破記憶體的話得自己動手，以 EMS 拿擴展記憶體，以 XMS 拿延伸記憶體，不但辛苦的不得了，也只能解決記憶體的動態配置問題，應用軟體本身仍是8086 架構，格局小不哩嘰的。286 機器問世後大家開始期待保護模式作業系統的出現，於是 OS/2、DOS Extender、Windows 紛紛掙得一片天。這本書講的就是關於擴展/延伸記憶體、EMS/XMS 規格、DOS Extender、VCPI/DPMI、Multitasker (DESQView、Windows) 等保護模式主題。</p>

<p class="calibre2">DOS-Extender 到底是什麼呢 ? 一言以敝之，隱藏在 DOS 背後的迷你作業環境是也。Windows 又是什麼呢 ? 一言以敝之，架構在 DOS 之上的作業環境是也。什麼是作業環境 ? 負擔作業系統的任務但不夠完全 (例如 Windows 就藉助於 DOS 的檔案系統)，姑可稱為作業環境。DOS Extender 已有六、七年歷史，你最近一、兩年才聽說嗎 ? 亡羊補牢時猶未晚。如果你對於像 AutoCAD-386，Lotus123，Mathematic 這樣的軟體既在 DOS 下工作又明顯突破各種 DOS 限制百思不解，那麼看這本書就是找對方向了。</p>

<p class="calibre2">第一章介紹 IBM PC 上的程式架構。簡單介紹過 8086 結構 (真實模式) 後，立刻開始探討保護模式。其中對於 Intel 處理器保護模式下的定址觀念有一些十分重要的介紹，包括 80286/80386 的 selector, segment descriptor, LDT, GDT, system register, 線性位址與虛擬位址的轉換關係等等。</p>

<p class="calibre2">第二章和第三章介紹擴展記憶體/延伸記憶體及其規格 EMS/XMS。由於 DOS 在記憶體方面無法突破的限制，這兩種記憶體以及規格份外受到 DOS 應用軟體發展者的重視。EMS/XMS 是設計給應用程式用的，不像後述的 VCPI/DPMI 是為系統而準備。EMS 其實可歸類為爺爺級產品，唯一比 XMS 強的地方是它能夠在 8086 架構上突破640KB 的封鎖 (XMS 一定要存在於 286 以上的機器)。新一代的程式員應該對 XMS 的興趣遠大於 EMS。第二章有一個程式實例，是一個驅動程式，利用 EMS 抓取擴展記憶體做出一個虛擬磁碟。第三章介紹各種存取延伸記憶體的方法，除了 XMS 之外還有比較早期比較更低階的BIOS INT 15h 方式，所舉的程式例也是 INT 15h 而非 XMS，殊為可惜。XMS 的例子不是沒有，但都只是程式片斷。</p>

<p class="calibre2">第四章和第五章介紹 286-DOS Extender 和 386 DOS Extender。DOS Extender 是 DOS 的延伸產品，可說是個小型的作業系統 (好吧，作業環境!)。DOS Extender 可以包裝在應用程式之中，當使用者在 DOS 環境下執行應用程式，其內的 DOS Extender 蟄伏起來，監視各種中斷。DOS Extender 攔截記憶體方面的中斷並切入保護模式中服務，因此可以突破 DOS 應用程式只能夠使用 640K 的古老限制。DOS Extender 分為 286 和 386 兩種 (是兩種不同的產品)，這兩章對於技術層面有相當深入的描述。作者以 DOS/16M 以及 Instant-C (Rational Systems 公司出品) 兩項產品來解說程式實例，兼也介紹了 Eclipse Computer Solution 公司的 OS/286。</p>

<p class="calibre2">說起來很有趣，誰會想到 DOS Extender 這樣的觀念呢 ? 第一套 DOS Extender 的作者肯定是一位不墨守成規的程式設計名家 --- 最高段的那種。我想他應該是不愛在八點半上班，五點半下班的那種人。拿這種俗事來規範名家，把他氣跑了倒楣的經理損失是老板。這些藝術家不僅需要知道 MS-DOS 以及 ROM BIOS 介面 (無論是公開的或未公開的)，還必須嫻熟所有舉足輕重的應用軟體 (如 Lotus123 或 SideKick)；他們必須掌握各種 PC 相容硬體的架構，以及特殊晶片 (甚至於各式各樣加速卡) 的性質 (這也是我為什麼要把PC Interrupt 放在本期書評一起介紹的緣故)。他們在一個赫赫有名敵友難分的環境下寫了一個小小的保護模式作業系統，並且安全存活下來，與一大堆的系統和平共存，包括 XMS 驅動器、VCPI/DPMI server...。</p>

<p class="calibre2">初步接觸 DOS Extender 的人最容易迷失在產品 (工具) 的搭配上面，因為連產品的定位與意義都不清楚，也就不知道為什麼要這樣搭配，為什麼要那樣搭配。簡單地說，如果你要發展 286 保護模式程式的話，你需要一套 16 位元 C 編譯器和一套 286 based DOS Extender :</p>

<table border="1" class="calibre10"><tr class="row"><td class="calibre11">C 編譯器廠商 (*) </td> <td class="calibre11">產品 </td> </tr><tr class="row"><td class="calibre11">Microsoft </td> <td class="calibre11">Mirosoft C </td> </tr><tr class="row"><td class="calibre11">Borland </td> <td class="calibre11">Borland C </td> </tr></table><table border="1" class="calibre10"><tr class="row"><td class="calibre11">DOS-X 廠商 </td> <td class="calibre11">產品 </td> </tr><tr class="row"><td class="calibre11">Phar Lap </td> <td class="calibre11">286|DOS Extender </td> </tr><tr class="row"><td class="calibre11">Raional </td> <td class="calibre11">DOS/16M </td> </tr><tr class="row"><td class="calibre11">Eclipse </td> <td class="calibre11">OS/286 </td> </tr></table><p class="calibre2">* 各 C 編譯器何止這些，我只列出較著名者。 </p>

<p class="calibre2">如果你要發展 386 保護模式程式的話，你需要一套 32 位元 C 編譯器和一套 386 based DOS Extender :</p>

<table border="1" class="calibre10"><tr class="row"><td class="calibre11">C 編譯器廠商 </td> <td class="calibre11">產品 </td> </tr><tr class="row"><td class="calibre11">WATCOM </td> <td class="calibre11">C/386 </td> </tr><tr class="row"><td class="calibre11">MetaWare </td> <td class="calibre11">Hig C </td> </tr><tr class="row"><td class="calibre11">Intel </td> <td class="calibre11">C Code Builde (*) </td> </tr><tr class="row"><td class="calibre11">Zorteh </td> <td class="calibre11">Zortech C++ (*) </td> </tr></table><table border="1" class="calibre10"><tr class="row"><td class="calibre11">DOS-X 廠商 </td> <td class="calibre11">產品 </td> </tr><tr class="row"><td class="calibre11">Phar Lap </td> <td class="calibre11">386|DOS Extender </td> </tr><tr class="row"><td class="calibre11">Rational </td> <td class="calibre11">DOS/4G </td> </tr><tr class="row"><td class="calibre11">clipse </td> <td class="calibre11">OS/386 </td> </tr></table><p class="calibre2">* 整套工具已內含 DOS-Extender (不是另附一套 DOS Extender 給你，而是內含在 C runtime 函式庫內)。這可能會成為一種趨勢。 </p>

<p class="calibre2">關於 C 語言軟體發展工具 (包括 32 位元工具)，PC Magazine 在 1992/07 有一篇非常詳盡的報導與評估，是很好的參考資料，分二期於 1992/09、10 兩月在微電腦傳真雜誌連載完畢</p>

<p class="calibre2">其實你要知道，DOS Extender 有時候可以說是一種觀念，一種技術，而不一定代表一種產品。像 Windows、DESQView 本身都建構在 DOS 之上，都需要與 DOS 打交道，廣義地說它們也都算是 DOS-Extender (超級 DOS Extender)。Windows 中的 DOSX.EXE 就是 286 標準模式下的 DOS Extender，WIN386.EXE 就是 Windows 386 加強模式下的DOS Extender (兼 DPMI Server)。不論處於什麼多工環境，只要是架構在 DOS 上，DOS Extender 就是遊戲的主角。DOS Extender 重視的是程式寫作的透明度，最好是DOS 程式完全不修改就相容。也因為這樣，所以狹義上 Windows 不被視為 DOS Extender。</p>

<p class="calibre2">本書第六章介紹 Windows。如果你已經是 Windows 的程式員，這一章可以跳過，如果你一直還固守在 DOS 領域，這一章或可作為了解 Windows 的開始。寫這一章的是 Windows 領域的巨擘 Charles Petzold，在短短的 52 頁中，作者介紹了 Windows 的歷史，Windows 與 DOS 的關係，程式寫作介面，動態聯結，新的檔案格式，記憶體管理，硬體輸入，圖形介面，行程通訊 (IPC)。具體而微，但對初入門者而言深奧了些。</p>

<p class="calibre2">第七章以 54 頁的篇幅介紹 DESQView。DESQView 與 Windows 同樣都是多工作業環境，論多工效率，DESQview 較 Windows 更甚一籌，DESQView 的 API 比較容易學習，系統所需的硬體資源也較 Windows 為少。不過 Windows 提供的是全面性的解決方案。更有船堅砲利的 Microsoft 為後盾，這就是為什麼 Windows 能佔有市場的原因。Microsoft 近年來在產品發展以及市場策略的行徑只能用強悍兩字形容。本章有一個 DESQView 應用程式範例，讀者可以拿來與 Windows 程式比較看看。</p>

<p class="calibre2">第八章和第九章分別介紹 VCPI 和 DPMI。這兩個 'I' (Interface) 都是為了協調各種 386 control program (像是 EMS Emulator，Multitasker，DOS Extender) 進入保護模式搶奪系統資源時可能引發的問題。VCPI 與 EMS 關係密切，也和 EMS 一樣屬於過氣規格。DPMI 的篇幅很少，才七頁半，與出版時間有關 (本書第二版就大量增加了 DPMI 內容，後敘)。第八章有幾張圖設計的很精采，真的勝過千言萬語。EMS 和 XMS 都各有其驅動程式，那麼這兩個 'I' 的驅動程式是什麼 ? 哦你問的非常切中要領，在 VCPI/DPMI 不稱為驅動程式 (因為其格局較大)，而是稱為 Server 或 Host。DPMI Server 如 Windows、386MAX，VCPI Server 如 QEMM386、386MAX。</p>

<p class="calibre2">第十章介紹 DOS Extender 與多工作業環境如何搭配，包括記憶體共享，裝置虛擬化。</p>

<p class="calibre2">本書的第一個特色是難! 第二個特色是深奧!! 第三個特色是看不懂!!! 這絕不是一本給初級工程師看的書，購買之前請先掂掂自己的份量。像第六章講到 Windows 的動態聯結、記憶體管理，我在介紹 Charles Petzold 的 Programming Windows 時就已說過，看懂其第七章的人不多 (如果你是其中一位，我當然恭喜你)，又怎麼可能在如此精簡的篇幅中了解它呢 ? 只能拿來溫故知新罷了。不過看不懂沒關係，本書完整列出幾個重要的記憶體規格如 EMS、XMS、VCPI 的程式介面 (如何呼叫、參數、回返值、錯誤碼解釋)，至少可做為參考手冊 (DPMI 詳細介面在本書第二版補齊，後敘)。另外在附錄中也列出相關廠商的資訊 (產品，地址，電話)，頗為實用。</p>

<p class="calibre2">許多人說看此書像看天書一樣，畢竟我們對保護模式太陌生了。而且本書純粹只從作業系統的層面來探討，實際的程式範例不多，對大多數軟體人員而言好像有點兒踩在雲端上頭。但是各位也不要想在保護模式之下像對 DOS 一樣隨處挖地掘寶，除非你從 DPMI 入手，或是 Windows 的 ToolHelp 模組，否則會處處踢到鐵板。</p>

<p class="calibre2">這是迄今最重要的保護模式著作，研究保護模式的人絕對必備，看不懂也要買，多看一次多懂一點。國內也有半本保護模式的書籍 (說半本並沒有輕蔑之意。該書分兩篇，保護模式列在其第二篇)。</p>

<p class="calibre2">DOS 到底還活不活，是許多人爭論的焦點。當然最後只有歷史能下結論。不過，DOS 的軔性已經叫許多專家跌破眼鏡了。由於 OS/2 緩慢的接受程度，由於DOS Extender 的發明，由於 Windows 3.x 的問世，以及由於工業標準 DPMI 的完成，所有情況都給予 MS-DOS 新生的跡象。不會有人懷疑或否定桌上型電腦最終將進入到一個真正保護模式的作業系統，我們唯一不確定的是哪一個系統會脫穎而出以及它將多快與我們見面。不過再好的保護模式作業系統要大規模取代 DOS 的地位 (注意「大規模」這三個字)，應該還有相當長一段路。只要 Microsoft 發展出高技術的 32 位元、386 規格、可以在 Windows 中執行的MS-DOS 核心，它的壽命就會拉長，增加與保護模式作業系統的纏鬥能力。</p>

<p class="calibre2">各位聽說什麼叫做殺手級應用軟體嗎 ? 那是指一個應用軟體是如此優良重要，以至於會讓使用者因而採用某種作業系統。Visicalc、WordStar、Lotus123、Excel 都算。如果 Windows 多幾個殺手級應用軟體，DOS 會加速銷聲匿跡；反之如果 DOS 多幾個殺手級應用軟體，保証固本培元延年益壽。</p>

<p class="calibre2">PC Tech Journal 在 1987 年八月率先討伐 DOS (真是打落水狗人人爭先恐後，那時 DOS 3.3 甫出，OS/2 也剛剛推出)，該文章說由於 DOS 不具備多工能力，所以 3.3 版雖然不錯，卻只是一首天鵝之歌(傳說中天鵝將死之前鳴聲美妙)。如今 PC Tech Journal 安在哉 ? 倒是 DOS 又添了幾千萬用戶。微電腦傳真雜誌在今年開春第一個月有一篇專題，題目是「DOS 運命知多少 ?」(原文是 PC Magazine 1992/10/13 的DOS Lives!)，其中有兩極化的評論 :</p>

<p class="calibre2">我們都認為那些非 Windows 軟體如 WordPerfect, Lotus123, AutoCAD 等是DOS 應用軟體，實則不然。這些軟體用到 DOS 的地方大概只有檔案存取，其餘都是自己和硬體溝通。這種情況伴隨而來的是程式設計的重複浪費。</p>

<p class="calibre2">現在，使用者所期望的是多工的能力，以及好幾百萬位元組的可用記憶體。這些是作業系統應該負起的責任。程式設計人員和使用者都期待進入未來的世界，而 DOS 不。如果我們一廂情願認定 DOS 仍適合今天的作業需求，DOS 當然還會存活下來。我們得花點力氣打破這個慣例，將 DOS 逐出個人電腦世界，選擇更好的作業系統取代它。DOS 必須死 !</p>

<p class="calibre2">-- Charles Petzold </p>

<p class="calibre2">DOS 6.0 已進入 beta 測試。它具備自動調整最佳化的能力，即時資料壓縮，更多更好的公用程式，包括硬碟備份、硬碟檔案併合、防毒、反刪除。它將對網路，尤其是 Windows for Workgroup 的使用者提供功能。<br class="calibre3"/>未來 DOS 還有可能成為 DPMI server，以及更換新的檔案系統。Microsoft 對DOS 有實在的承諾，而前景看來十分光明。DOS 來日方長 !</p>

<p class="calibre2">-- Jeff Prosise </p>

<p class="calibre2">如果我們多了解兩位作者一點，趣味性更高。Charles Petzold 是 PC Magazine 上的 [Environment] 專欄主持人，專門探討 Windows、OS/2 的程式設計。Jeff Prosise 主持 Microsoft Systems Journal 的 DOS Q&amp;A，在 DOS 領域享有盛名。</p>

<p class="calibre2">到底 DOS 是日薄西山還是再一次旭日東升 ? 這麼嚴肅的論題不是侯捷回答得了的，我亦不過是拾人牙慧。這裡有一個美國 Dataquest 公司的市場預測 : 1992 年桌上型電腦作業系統的佔有率中 DOS 達 73.2%；1996 年雖然 OS/2、UNIX、Windows NT 強敵環伺，DOS 仍將佔有 35.1%。喔喔喔，沒時間 (或任何其他理由) 學新知的朋友這下子又可以放心不少。你知道，我一直設身處地努力想體會那位拿到電晶體博士學位後發現全世界已經改用積體電路的仁兄心中的悲壯 (悲涼 ?)。</p>

<p class="calibre2"><span><img src="img/img2.jpeg" alt="img2.jpeg" class="calibre8"/></span></p>

<p class="calibre2">背景資料 :<br class="calibre3"/>書名 Extending DOS (2nd Edition) <br class="calibre3"/>作者 Ray Duncan, Charles Petzold, Andrew Schulman,<br class="calibre3"/>M. Steven Baker, Ross P. Nelson, Stephen R. Davis<br class="calibre3"/>Robert Moote<br class="calibre3"/>出版 Addison Wesley<br class="calibre3"/>頁數 10 章，538 頁<br class="calibre3"/>售價 US$ 26.95<br class="calibre3"/>出版 1991/11<br class="calibre3"/>磁片 no</p>

<p class="calibre2">1. Programming the IBM PC<br class="calibre3"/>2. Expanded Memory and the EMS<br class="calibre3"/>3. Extended Memory and the XMS<br class="calibre3"/>4. 16-bits Protected-Mode DOS Extenders<br class="calibre3"/>5. 32-bits Protected-Mode DOS Extenders<br class="calibre3"/>6. The Windows Operating Environment<br class="calibre3"/>7. DESQview<br class="calibre3"/>8. VCPI for EMS/DOS Extender Compatibility<br class="calibre3"/>9. The DOS Protected-Mode Interface (DPMI)<br class="calibre3"/>10. Multitasking and DOS Extenders </p>

<p class="calibre2"><span class="imgBig"><img src="img/img15.jpeg" alt="img15.jpeg" class="calibre4"/></span></p>

<p class="calibre2">Extending DOS 在出版一年半之後，推出了第二版。新版書在書名的下面有一個小標題 : A Programmer's Guide to Protected-Mode DOS，明白告訴你這本書的重點 : 保護模式下的程式方法。先不談內容，我覺得封面設計很正點，耳目一新。</p>

<p class="calibre2">讀者可以與第一版比較一下，章節的名稱有一點點小小的變動，但其實 16-bits DOS Extender 就是 80286 DOS Extender，32-bits DOS Extender 就是 80386 DOS Extender，這樣的變化意義在哪裡我不知道。書內的圖片變得比較精緻，但都是換湯不換藥。內容上可取的是，多了 100 頁左右的篇幅，增加了好幾個程式例，各種規格也都添了新血。像舊版第三章介紹 HIMEM.SYS 時只有 /HMAXMIN=n 和 /NUMHANDLES=n 兩個參數，新版中就多了 /int15、/machine、/a20control、/shadowram、/cpuclock 等參數。第三章還多了個 XMSDISK.SYS 實例，利用 XMS 拿取延伸記憶體模擬為虛擬磁碟。</p>

<p class="calibre2">第四章改以 Phar Lap 公司的 286|DOS-Extender 為實例工具 (舊版是用 Rational 公司的 DOS/16M)，因為作者 Schulman 寫完第一版書之後就跳槽到 Phar Lap 了 (他老兄現在又走人了)。如果你是 286|DOS-Extender 的用戶，一定對這一章舉的許多例子感覺眼熟，它們就是Phar Lap 的 286|DOS Extender 套件上的範例程式。第</p>

<p class="calibre2">五章變化相當大，重點並不像第四章要表現 DOS Extender 環境下的保護模式程式風貌，而是對市面上重要的 32 位元 DOS Extender 從各個角度作介紹與比較。本章內容重新組織過，表現比第一版好很多。</p>

<p class="calibre2">接下來的數章改變不大。第九章 DPMI 新示範一個小型的 DOS Extender，雖然是藉助 DPMI 才得以完成，也是彌足珍貴。這個例子最早在 1991/03/12 PC Magazine 中的 [Power Programming] 專欄發表過 (這是 Ray Duncan 主持的專欄)。從這裡你可以學習如何自行進入保護模式，如何設定保護模式下的IDT (Interrupt Descriptor Table)，如何自行設計保護模式的中斷服務常式，如何安全退出保護模式，相當有興趣而富冒險性。為什麼應用程式可以自行完成這麼偉大的工作 ? 其實哪裡是自己完成，其間透過 DPMI 幫助，還透過 Windows 內建的 DOS Extender 幫助。本章由 7 頁半增加到 30 頁，補充了許多 DPMI 資料。</p>

<p class="calibre2">第十章改以 Windows 和 DESQView 兩個角度看多工如何進行，附有一個程式可以利用 DPMI 函式取得 GDT (Global Descriptor Table) 內容，是以MetaWare C 寫成 (最核心部份是以組合語言完成)，搭配Phar Lap 的 386|DOS Extender。</p>

<p class="calibre2">四個附錄十分詳盡細地列出 EMS、XMS、VCPI、DPMI 程式介面。</p>

<p class="calibre2">作者 Ray Duncan 除了寫作本書以及 Advanced MS-DOS Programming、Advanced OS/2 Programming 之外，還主持 PC Magazine 上的 [Power Programming] 專欄，每月兩篇大論文，內容包羅萬象 : Windows、Windows NT、C++、組合語言 (這是他最喜歡的語言，我猜他一定也喜歡刮鬍刀片和古龍水)、Pen Windows、Protected Mode programming ...。我實在佩服 Duncan 的博學以及量產，真好奇他哪來那麼多時間 ? 他還是顧問公司的總裁呢。</p>

<p class="calibre2">我們談來談去，不是 DOS 就是 Windows。朋友問我為什麼不談點OS/2、UNIX。非不為也，不能也。侯捷雖然興趣廣泛又愛看書，但畢竟不是三頭六臂。</p>

<p class="calibre2"><span><img src="img/img2.jpeg" alt="img2.jpeg" class="calibre8"/></span></p>

<p class="calibre2">背景資料 :<br class="calibre3"/>書名 PC Interrupt <br class="calibre3"/>作者 Ralf Brown &amp; Jim Kyle<br class="calibre3"/>出版 Addison Wesley<br class="calibre3"/>頁數 36 章，989 頁<br class="calibre3"/>售價 US$ 32.95<br class="calibre3"/>出版 1991/10<br class="calibre3"/>磁片 no</p>

<p class="calibre2">1. Reference Section Organization<br class="calibre3"/>2. Hardware Interrupt<br class="calibre3"/>3. ROM BIOS<br class="calibre3"/>4. Vendor-Specific ROM BIOS Extensions<br class="calibre3"/>5. Video<br class="calibre3"/>6. Low-Level Disk I/O<br class="calibre3"/>7. Serial I/O<br class="calibre3"/>8. MS-DOS Compatibles<br class="calibre3"/>9. DOS Extenders<br class="calibre3"/>10. EMS, XMS, and VCPI<br class="calibre3"/>11. DOS Protected-Mode Interface<br class="calibre3"/>12. Virtual DMA Specification<br class="calibre3"/>13. Mouse Support<br class="calibre3"/>14. Microsoft Windows<br class="calibre3"/>15. TopView and DESQview/QEMM<br class="calibre3"/>16. MultiDOS Plus<br class="calibre3"/>17. Other Multitaskers Task Switchers<br class="calibre3"/>18. Alloy Multiuser/Networking Systems<br class="calibre3"/>19. Network Redirector and CD-ROM Extensions<br class="calibre3"/>20. Novell NetWare<br class="calibre3"/>21. LANtastic Network Operating System<br class="calibre3"/>22. Banyan VINES<br class="calibre3"/>23. 10NET<br class="calibre3"/>24. DECnet DOS<br class="calibre3"/>25. APPC/PC<br class="calibre3"/>26. IBM Mainframe Connectivity<br class="calibre3"/>27. Miscellaneous Networking Calls<br class="calibre3"/>28. Remote Control Software<br class="calibre3"/>29. Communicating Applications Specification<br class="calibre3"/>30. Intel Image Processing Interface<br class="calibre3"/>31. STSC SPL * Plus/PC<br class="calibre3"/>32. ZIPKEY<br class="calibre3"/>33. PC Tools<br class="calibre3"/>34. Viruses and Anti-Viral Tools<br class="calibre3"/>35. Programming Language Runtime Support<br class="calibre3"/>36. Miscellaneous APIs </p>

<p class="calibre2"><span class="imgBig"><img src="img/img16.jpeg" alt="img16.jpeg" class="calibre4"/></span></p>

<p class="calibre2">有一種書是傳道授業解惑用的，姑且可以稱之為經書。這種書出 (出版之後) 則石破天驚，洛陽紙為貴；入 (入到你的小書架之上) 則蓬壁生輝，華光滿斗室。寫這麼樣一本書，作者可以流芳數載 (電腦界出名的週期短)。</p>

<p class="calibre2">另外有一種書不像經書那麼偉大可以藏諸名山放於金櫃石室。寫起來雖然很辛苦，卻不太有人注意作者之名 (哪些人編了四庫全書、康熙字典 ? 什麼人編了辭海 ? )；雖然大家都需要，卻少有人提及。這種書不需要華美的文采，只要詳實中肯的敘述和完備的資料收集。平時你不會去看它，用時卻唯恐少一本。這是工具書，PC Interrupt 就是這麼一本工具書。</p>

<p class="calibre2">這本書涵蓋的範圍非常廣，從硬體中斷、標準 BIOS 中斷、擴充卡提供的擴充 BIOS 中斷、DOS 中斷、記憶體管理規格的 EMS/XMS/VCPI/DPMI 中斷、各種作業環境如Netware/Windows/DESQView/DOS-Extender 中斷，以及各種軟體、工具、環境提供的雜七雜八的中斷。有的是未公開的 (Undocumented)，有的與 DOS 版本有密切關係，讀者在查閱的時候要特別注意。本書算得上是不錯的工具書，不但資料豐富，對於彼此關聯的各個中斷也能夠提出來供交互參考。除了可以從各章主題查起，也可以從索引查起，或是從第一章的 Reference Section Organization 查起。</p>

<p class="calibre2">作者好像要把他從各處收集來的寶貝一股腦兒全給你。一些我聽都沒聽過的東東所提供的中斷也列出來，也許是我自己孤漏寡聞。不過連 shareware 軟體的中斷也列出來實在有點兒吃不消作者的熱誠。資料多是好，卻會反應在售價上。</p>

<p class="calibre2">我對撰寫工具書的人懷有崇高的敬意。他們要付出多少心血去收集、整理、測試資料，這一切似乎頗為枯燥。他們享受到的榮譽與他們的付出不成比例。不過如果能夠一魚兩吃倒是不錯，本書的兩位作者也都是 <a href="http://jjhou.boolan.com/review1-8.htm#%E6%9B%B8%E5%90%8D%20Undocumented%20DOS" target="_blank" class="calibre5">Undocumented DOS</a> 的作者。</p>
</body></html>
